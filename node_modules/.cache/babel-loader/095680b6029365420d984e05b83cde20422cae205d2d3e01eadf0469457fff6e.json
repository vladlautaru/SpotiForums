{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst Errors = require('../misc/errors');\n\n/**\n * Default command interface.\n */\nclass Command extends EventEmitter {\n  constructor(cmdParam, resolve, reject) {\n    super();\n    this.cmdParam = cmdParam;\n    this.sequenceNo = -1;\n    this.compressSequenceNo = -1;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.sending = false;\n    this.unexpectedError = this.throwUnexpectedError.bind(this);\n  }\n  displaySql() {\n    return null;\n  }\n\n  /**\n   * Throw an unexpected error.\n   * server exchange will still be read to keep connection in a good state, but promise will be rejected.\n   *\n   * @param msg message\n   * @param fatal is error fatal for connection\n   * @param info current server state information\n   * @param sqlState error sqlState\n   * @param errno error number\n   */\n  throwUnexpectedError(msg, fatal, info, sqlState, errno) {\n    const err = Errors.createError(msg, errno, info, sqlState, this.opts && this.opts.logParam ? this.displaySql() : this.sql, fatal, this.cmdParam ? this.cmdParam.stack : null, false);\n    if (this.reject) {\n      process.nextTick(this.reject, err);\n      this.resolve = null;\n      this.reject = null;\n    }\n    return err;\n  }\n\n  /**\n   * Create and throw new Error from error information\n   * only first called throwing an error or successfully end will be executed.\n   *\n   * @param msg message\n   * @param fatal is error fatal for connection\n   * @param info current server state information\n   * @param sqlState error sqlState\n   * @param errno error number\n   */\n  throwNewError(msg, fatal, info, sqlState, errno) {\n    this.onPacketReceive = null;\n    const err = this.throwUnexpectedError(msg, fatal, info, sqlState, errno);\n    this.emit('end');\n    return err;\n  }\n\n  /**\n   * When command cannot be sent due to error.\n   * (this is only on start command)\n   *\n   * @param msg error message\n   * @param errno error number\n   * @param info connection information\n   */\n  sendCancelled(msg, errno, info) {\n    const err = Errors.createError(msg, errno, info, 'HY000', this.opts.logParam ? this.displaySql() : this.sql);\n    this.emit('send_end');\n    this.throwError(err, info);\n  }\n\n  /**\n   * Throw Error\n   *  only first called throwing an error or successfully end will be executed.\n   *\n   * @param err error to be thrown\n   * @param info current server state information\n   */\n  throwError(err, info) {\n    this.onPacketReceive = null;\n    if (this.reject) {\n      if (this.cmdParam && this.cmdParam.stack) {\n        err = Errors.createError(err.text ? err.text : err.message, err.errno, info, err.sqlState, err.sql, err.fatal, this.cmdParam.stack, false);\n      }\n      this.resolve = null;\n      process.nextTick(this.reject, err);\n      this.reject = null;\n    }\n    this.emit('end', err);\n  }\n\n  /**\n   * Successfully end command.\n   * only first called throwing an error or successfully end will be executed.\n   *\n   * @param val return value.\n   */\n  successEnd(val) {\n    this.onPacketReceive = null;\n    if (this.resolve) {\n      this.reject = null;\n      process.nextTick(this.resolve, val);\n      this.resolve = null;\n    }\n    this.emit('end');\n  }\n}\nmodule.exports = Command;","map":{"version":3,"names":["EventEmitter","require","Errors","Command","constructor","cmdParam","resolve","reject","sequenceNo","compressSequenceNo","sending","unexpectedError","throwUnexpectedError","bind","displaySql","msg","fatal","info","sqlState","errno","err","createError","opts","logParam","sql","stack","process","nextTick","throwNewError","onPacketReceive","emit","sendCancelled","throwError","text","message","successEnd","val","module","exports"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/mariadb/lib/cmd/command.js"],"sourcesContent":["//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst Errors = require('../misc/errors');\n\n/**\n * Default command interface.\n */\nclass Command extends EventEmitter {\n  constructor(cmdParam, resolve, reject) {\n    super();\n    this.cmdParam = cmdParam;\n    this.sequenceNo = -1;\n    this.compressSequenceNo = -1;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.sending = false;\n    this.unexpectedError = this.throwUnexpectedError.bind(this);\n  }\n\n  displaySql() {\n    return null;\n  }\n\n  /**\n   * Throw an unexpected error.\n   * server exchange will still be read to keep connection in a good state, but promise will be rejected.\n   *\n   * @param msg message\n   * @param fatal is error fatal for connection\n   * @param info current server state information\n   * @param sqlState error sqlState\n   * @param errno error number\n   */\n  throwUnexpectedError(msg, fatal, info, sqlState, errno) {\n    const err = Errors.createError(\n      msg,\n      errno,\n      info,\n      sqlState,\n      this.opts && this.opts.logParam ? this.displaySql() : this.sql,\n      fatal,\n      this.cmdParam ? this.cmdParam.stack : null,\n      false\n    );\n    if (this.reject) {\n      process.nextTick(this.reject, err);\n      this.resolve = null;\n      this.reject = null;\n    }\n    return err;\n  }\n\n  /**\n   * Create and throw new Error from error information\n   * only first called throwing an error or successfully end will be executed.\n   *\n   * @param msg message\n   * @param fatal is error fatal for connection\n   * @param info current server state information\n   * @param sqlState error sqlState\n   * @param errno error number\n   */\n  throwNewError(msg, fatal, info, sqlState, errno) {\n    this.onPacketReceive = null;\n    const err = this.throwUnexpectedError(msg, fatal, info, sqlState, errno);\n    this.emit('end');\n    return err;\n  }\n\n  /**\n   * When command cannot be sent due to error.\n   * (this is only on start command)\n   *\n   * @param msg error message\n   * @param errno error number\n   * @param info connection information\n   */\n  sendCancelled(msg, errno, info) {\n    const err = Errors.createError(msg, errno, info, 'HY000', this.opts.logParam ? this.displaySql() : this.sql);\n    this.emit('send_end');\n    this.throwError(err, info);\n  }\n\n  /**\n   * Throw Error\n   *  only first called throwing an error or successfully end will be executed.\n   *\n   * @param err error to be thrown\n   * @param info current server state information\n   */\n  throwError(err, info) {\n    this.onPacketReceive = null;\n    if (this.reject) {\n      if (this.cmdParam && this.cmdParam.stack) {\n        err = Errors.createError(\n          err.text ? err.text : err.message,\n          err.errno,\n          info,\n          err.sqlState,\n          err.sql,\n          err.fatal,\n          this.cmdParam.stack,\n          false\n        );\n      }\n      this.resolve = null;\n      process.nextTick(this.reject, err);\n      this.reject = null;\n    }\n    this.emit('end', err);\n  }\n\n  /**\n   * Successfully end command.\n   * only first called throwing an error or successfully end will be executed.\n   *\n   * @param val return value.\n   */\n  successEnd(val) {\n    this.onPacketReceive = null;\n    if (this.resolve) {\n      this.reject = null;\n      process.nextTick(this.resolve, val);\n      this.resolve = null;\n    }\n    this.emit('end');\n  }\n}\n\nmodule.exports = Command;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}