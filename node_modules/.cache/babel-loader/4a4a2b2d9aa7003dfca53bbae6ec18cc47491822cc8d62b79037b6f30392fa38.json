{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst Collations = require('../const/collations.js');\nconst urlFormat = /mariadb:\\/\\/(([^/@:]+)?(:([^/]+))?@)?(([^/:]+)(:([0-9]+))?)\\/([^?]+)(\\?(.*))?$/;\n\n/**\n * Default option similar to mysql driver.\n * known differences\n * - no queryFormat option. Permitting client to parse is a security risk. Best is to give SQL + parameters\n *   Only possible Objects are :\n *   - Buffer\n *   - Date\n *   - Object that implement toSqlString function\n *   - JSON object\n * + rowsAsArray (in mysql2) permit to have rows by index, not by name. Avoiding to parsing metadata string => faster\n */\nclass ConnectionOptions {\n  constructor(opts) {\n    if (typeof opts === 'string') {\n      opts = ConnectionOptions.parse(opts);\n    }\n    if (!opts) opts = {};\n    this.host = opts.host || 'localhost';\n    this.port = opts.port || 3306;\n    this.keepEof = opts.keepEof || false;\n    this.user = opts.user || process.env.USERNAME;\n    this.password = opts.password;\n    this.database = opts.database;\n    this.stream = opts.stream;\n\n    // log\n    this.debug = opts.debug || false;\n    this.debugCompress = opts.debugCompress || false;\n    this.debugLen = opts.debugLen || 256;\n    this.logParam = opts.logParam === undefined ? true : opts.logParam === true;\n    if (opts.logger) {\n      if (typeof opts.logger === 'function') {\n        this.logger = {\n          network: opts.logger,\n          query: opts.logger,\n          error: opts.logger,\n          warning: opts.logger\n        };\n      } else {\n        this.logger = {\n          network: opts.logger.network,\n          query: opts.logger.query,\n          error: opts.logger.error,\n          warning: opts.logger.warning || console.log\n        };\n        if (opts.logger.logParam !== undefined) this.logParam = opts.logger.logParam;\n      }\n    } else {\n      this.logger = {\n        network: this.debug || this.debugCompress ? console.log : null,\n        query: null,\n        error: null,\n        warning: console.log\n      };\n    }\n    this.debug = !!this.logger.network;\n    if (opts.charset && typeof opts.charset === 'string') {\n      this.collation = Collations.fromCharset(opts.charset.toLowerCase());\n      if (this.collation === undefined) {\n        this.collation = Collations.fromName(opts.charset.toUpperCase());\n        if (this.collation !== undefined) {\n          this.logger.warning(\"warning: please use option 'collation' \" + \"in replacement of 'charset' when using a collation name ('\" + opts.charset + \"')\\n\" + \"(collation looks like 'UTF8MB4_UNICODE_CI', charset like 'utf8').\");\n        } else {\n          this.charset = opts.charset;\n        }\n      }\n    } else if (opts.collation && typeof opts.collation === 'string') {\n      this.collation = Collations.fromName(opts.collation.toUpperCase());\n      if (this.collation === undefined) throw new RangeError(\"Unknown collation '\" + opts.collation + \"'\");\n    } else {\n      this.collation = opts.charsetNumber ? Collations.fromIndex(opts.charsetNumber) : undefined;\n    }\n\n    // connection options\n    this.permitRedirect = opts.permitRedirect === undefined ? true : opts.permitRedirect;\n    this.initSql = opts.initSql;\n    this.connectTimeout = opts.connectTimeout === undefined ? 1000 : opts.connectTimeout;\n    this.connectAttributes = opts.connectAttributes || false;\n    this.compress = opts.compress || false;\n    this.rsaPublicKey = opts.rsaPublicKey;\n    this.cachingRsaPublicKey = opts.cachingRsaPublicKey;\n    this.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval || false;\n    this.forceVersionCheck = opts.forceVersionCheck || false;\n    this.maxAllowedPacket = opts.maxAllowedPacket;\n    this.permitConnectionWhenExpired = opts.permitConnectionWhenExpired || false;\n    this.pipelining = opts.pipelining;\n    this.timezone = opts.timezone || 'local';\n    this.socketPath = opts.socketPath;\n    this.sessionVariables = opts.sessionVariables;\n    this.infileStreamFactory = opts.infileStreamFactory;\n    this.ssl = opts.ssl;\n    if (opts.ssl) {\n      if (typeof opts.ssl !== 'boolean' && typeof opts.ssl !== 'string') {\n        this.ssl.rejectUnauthorized = opts.ssl.rejectUnauthorized !== false;\n      }\n    }\n\n    // socket\n    this.queryTimeout = opts.queryTimeout === undefined ? 0 : opts.queryTimeout;\n    this.socketTimeout = opts.socketTimeout === undefined ? 0 : opts.socketTimeout;\n    this.keepAliveDelay = opts.keepAliveDelay === undefined ? 0 : opts.keepAliveDelay;\n    this.trace = opts.trace || false;\n\n    // result-set\n    this.checkDuplicate = opts.checkDuplicate === undefined ? true : opts.checkDuplicate;\n    this.dateStrings = opts.dateStrings || false;\n    this.foundRows = opts.foundRows === undefined || opts.foundRows;\n    this.metaAsArray = opts.metaAsArray || false;\n    this.metaEnumerable = opts.metaEnumerable || false;\n    this.multipleStatements = opts.multipleStatements || false;\n    this.namedPlaceholders = opts.namedPlaceholders || false;\n    this.nestTables = opts.nestTables;\n    this.autoJsonMap = opts.autoJsonMap === undefined ? true : opts.autoJsonMap;\n    this.bitOneIsBoolean = opts.bitOneIsBoolean === undefined ? true : opts.bitOneIsBoolean;\n    this.arrayParenthesis = opts.arrayParenthesis || false;\n    this.permitSetMultiParamEntries = opts.permitSetMultiParamEntries || false;\n    this.rowsAsArray = opts.rowsAsArray || false;\n    this.typeCast = opts.typeCast;\n    if (this.typeCast !== undefined && typeof this.typeCast !== 'function') {\n      this.typeCast = undefined;\n    }\n    this.bulk = opts.bulk === undefined || opts.bulk;\n    this.checkNumberRange = opts.checkNumberRange || false;\n\n    // coherence check\n    if (opts.pipelining === undefined) {\n      this.permitLocalInfile = opts.permitLocalInfile || false;\n      this.pipelining = !this.permitLocalInfile;\n    } else {\n      this.pipelining = opts.pipelining;\n      if (opts.permitLocalInfile === true && this.pipelining) {\n        throw new Error('enabling options `permitLocalInfile` and `pipelining` is not possible, options are incompatible.');\n      }\n      this.permitLocalInfile = this.pipelining ? false : opts.permitLocalInfile || false;\n    }\n    this.prepareCacheLength = opts.prepareCacheLength === undefined ? 256 : opts.prepareCacheLength;\n    this.restrictedAuth = opts.restrictedAuth;\n    if (this.restrictedAuth != null) {\n      if (!Array.isArray(this.restrictedAuth)) {\n        this.restrictedAuth = this.restrictedAuth.split(',');\n      }\n    }\n\n    // for compatibility with 2.x version and mysql/mysql2\n    this.bigIntAsNumber = opts.bigIntAsNumber || false;\n    this.insertIdAsNumber = opts.insertIdAsNumber || false;\n    this.decimalAsNumber = opts.decimalAsNumber || false;\n    this.supportBigNumbers = opts.supportBigNumbers || false;\n    this.bigNumberStrings = opts.bigNumberStrings || false;\n    if (this.maxAllowedPacket && !Number.isInteger(this.maxAllowedPacket)) {\n      throw new RangeError(\"maxAllowedPacket must be an integer. was '\" + this.maxAllowedPacket + \"'\");\n    }\n  }\n\n  /**\n   * When parsing from String, correcting type.\n   *\n   * @param opts options\n   * @return {opts}\n   */\n  static parseOptionDataType(opts) {\n    if (opts.bulk) opts.bulk = opts.bulk === 'true';\n    if (opts.allowPublicKeyRetrieval) opts.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval === 'true';\n    if (opts.insertIdAsNumber) opts.insertIdAsNumber = opts.insertIdAsNumber === 'true';\n    if (opts.decimalAsNumber) opts.decimalAsNumber = opts.decimalAsNumber === 'true';\n    if (opts.bigIntAsNumber) opts.bigIntAsNumber = opts.bigIntAsNumber === 'true';\n    if (opts.charsetNumber && !isNaN(Number.parseInt(opts.charsetNumber))) {\n      opts.charsetNumber = Number.parseInt(opts.charsetNumber);\n    }\n    if (opts.permitRedirect) opts.permitRedirect = opts.permitRedirect === 'true';\n    if (opts.logParam) opts.logParam = opts.logParam === 'true';\n    if (opts.compress) opts.compress = opts.compress === 'true';\n    if (opts.connectAttributes) opts.connectAttributes = JSON.parse(opts.connectAttributes);\n    if (opts.connectTimeout) opts.connectTimeout = parseInt(opts.connectTimeout);\n    if (opts.keepAliveDelay) opts.keepAliveDelay = parseInt(opts.keepAliveDelay);\n    if (opts.socketTimeout) opts.socketTimeout = parseInt(opts.socketTimeout);\n    if (opts.dateStrings) opts.dateStrings = opts.dateStrings === 'true';\n    if (opts.debug) opts.debug = opts.debug === 'true';\n    if (opts.autoJsonMap) opts.autoJsonMap = opts.autoJsonMap === 'true';\n    if (opts.arrayParenthesis) opts.arrayParenthesis = opts.arrayParenthesis === 'true';\n    if (opts.checkDuplicate) opts.checkDuplicate = opts.checkDuplicate === 'true';\n    if (opts.debugCompress) opts.debugCompress = opts.debugCompress === 'true';\n    if (opts.debugLen) opts.debugLen = parseInt(opts.debugLen);\n    if (opts.prepareCacheLength) opts.prepareCacheLength = parseInt(opts.prepareCacheLength);\n    if (opts.queryTimeout) opts.queryTimeout = parseInt(opts.queryTimeout);\n    if (opts.foundRows) opts.foundRows = opts.foundRows === 'true';\n    if (opts.maxAllowedPacket && !isNaN(Number.parseInt(opts.maxAllowedPacket))) opts.maxAllowedPacket = parseInt(opts.maxAllowedPacket);\n    if (opts.metaAsArray) opts.metaAsArray = opts.metaAsArray === 'true';\n    if (opts.metaEnumerable) opts.metaEnumerable = opts.metaEnumerable === 'true';\n    if (opts.multipleStatements) opts.multipleStatements = opts.multipleStatements === 'true';\n    if (opts.namedPlaceholders) opts.namedPlaceholders = opts.namedPlaceholders === 'true';\n    if (opts.nestTables) opts.nestTables = opts.nestTables === 'true';\n    if (opts.permitSetMultiParamEntries) opts.permitSetMultiParamEntries = opts.permitSetMultiParamEntries === 'true';\n    if (opts.pipelining) opts.pipelining = opts.pipelining === 'true';\n    if (opts.forceVersionCheck) opts.forceVersionCheck = opts.forceVersionCheck === 'true';\n    if (opts.rowsAsArray) opts.rowsAsArray = opts.rowsAsArray === 'true';\n    if (opts.trace) opts.trace = opts.trace === 'true';\n    if (opts.ssl && (opts.ssl === 'true' || opts.ssl === 'false')) opts.ssl = opts.ssl === 'true';\n    if (opts.bitOneIsBoolean) opts.bitOneIsBoolean = opts.bitOneIsBoolean === 'true';\n    return opts;\n  }\n  static parse(opts) {\n    const matchResults = opts.match(urlFormat);\n    if (!matchResults) {\n      throw new Error(`error parsing connection string '${opts}'. format must be 'mariadb://[<user>[:<password>]@]<host>[:<port>]/[<db>[?<opt1>=<value1>[&<opt2>=<value2>]]]'`);\n    }\n    const options = {\n      user: matchResults[2] ? decodeURIComponent(matchResults[2]) : undefined,\n      password: matchResults[4] ? decodeURIComponent(matchResults[4]) : undefined,\n      host: matchResults[6] ? decodeURIComponent(matchResults[6]) : matchResults[6],\n      port: matchResults[8] ? parseInt(matchResults[8]) : undefined,\n      database: matchResults[9] ? decodeURIComponent(matchResults[9]) : matchResults[9]\n    };\n    const variousOptsString = matchResults[11];\n    if (variousOptsString) {\n      const keyValues = variousOptsString.split('&');\n      keyValues.forEach(function (keyVal) {\n        const equalIdx = keyVal.indexOf('=');\n        if (equalIdx !== 1) {\n          let val = keyVal.substring(equalIdx + 1);\n          val = val ? decodeURIComponent(val) : undefined;\n          options[keyVal.substring(0, equalIdx)] = val;\n        }\n      });\n    }\n    return this.parseOptionDataType(options);\n  }\n}\nmodule.exports = ConnectionOptions;","map":{"version":3,"names":["Collations","require","urlFormat","ConnectionOptions","constructor","opts","parse","host","port","keepEof","user","process","env","USERNAME","password","database","stream","debug","debugCompress","debugLen","logParam","undefined","logger","network","query","error","warning","console","log","charset","collation","fromCharset","toLowerCase","fromName","toUpperCase","RangeError","charsetNumber","fromIndex","permitRedirect","initSql","connectTimeout","connectAttributes","compress","rsaPublicKey","cachingRsaPublicKey","allowPublicKeyRetrieval","forceVersionCheck","maxAllowedPacket","permitConnectionWhenExpired","pipelining","timezone","socketPath","sessionVariables","infileStreamFactory","ssl","rejectUnauthorized","queryTimeout","socketTimeout","keepAliveDelay","trace","checkDuplicate","dateStrings","foundRows","metaAsArray","metaEnumerable","multipleStatements","namedPlaceholders","nestTables","autoJsonMap","bitOneIsBoolean","arrayParenthesis","permitSetMultiParamEntries","rowsAsArray","typeCast","bulk","checkNumberRange","permitLocalInfile","Error","prepareCacheLength","restrictedAuth","Array","isArray","split","bigIntAsNumber","insertIdAsNumber","decimalAsNumber","supportBigNumbers","bigNumberStrings","Number","isInteger","parseOptionDataType","isNaN","parseInt","JSON","matchResults","match","options","decodeURIComponent","variousOptsString","keyValues","forEach","keyVal","equalIdx","indexOf","val","substring","module","exports"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/mariadb/lib/config/connection-options.js"],"sourcesContent":["//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst Collations = require('../const/collations.js');\nconst urlFormat = /mariadb:\\/\\/(([^/@:]+)?(:([^/]+))?@)?(([^/:]+)(:([0-9]+))?)\\/([^?]+)(\\?(.*))?$/;\n\n/**\n * Default option similar to mysql driver.\n * known differences\n * - no queryFormat option. Permitting client to parse is a security risk. Best is to give SQL + parameters\n *   Only possible Objects are :\n *   - Buffer\n *   - Date\n *   - Object that implement toSqlString function\n *   - JSON object\n * + rowsAsArray (in mysql2) permit to have rows by index, not by name. Avoiding to parsing metadata string => faster\n */\nclass ConnectionOptions {\n  constructor(opts) {\n    if (typeof opts === 'string') {\n      opts = ConnectionOptions.parse(opts);\n    }\n\n    if (!opts) opts = {};\n    this.host = opts.host || 'localhost';\n    this.port = opts.port || 3306;\n    this.keepEof = opts.keepEof || false;\n    this.user = opts.user || process.env.USERNAME;\n    this.password = opts.password;\n    this.database = opts.database;\n    this.stream = opts.stream;\n\n    // log\n    this.debug = opts.debug || false;\n    this.debugCompress = opts.debugCompress || false;\n    this.debugLen = opts.debugLen || 256;\n    this.logParam = opts.logParam === undefined ? true : opts.logParam === true;\n    if (opts.logger) {\n      if (typeof opts.logger === 'function') {\n        this.logger = {\n          network: opts.logger,\n          query: opts.logger,\n          error: opts.logger,\n          warning: opts.logger\n        };\n      } else {\n        this.logger = {\n          network: opts.logger.network,\n          query: opts.logger.query,\n          error: opts.logger.error,\n          warning: opts.logger.warning || console.log\n        };\n        if (opts.logger.logParam !== undefined) this.logParam = opts.logger.logParam;\n      }\n    } else {\n      this.logger = {\n        network: this.debug || this.debugCompress ? console.log : null,\n        query: null,\n        error: null,\n        warning: console.log\n      };\n    }\n    this.debug = !!this.logger.network;\n\n    if (opts.charset && typeof opts.charset === 'string') {\n      this.collation = Collations.fromCharset(opts.charset.toLowerCase());\n      if (this.collation === undefined) {\n        this.collation = Collations.fromName(opts.charset.toUpperCase());\n        if (this.collation !== undefined) {\n          this.logger.warning(\n            \"warning: please use option 'collation' \" +\n              \"in replacement of 'charset' when using a collation name ('\" +\n              opts.charset +\n              \"')\\n\" +\n              \"(collation looks like 'UTF8MB4_UNICODE_CI', charset like 'utf8').\"\n          );\n        } else {\n          this.charset = opts.charset;\n        }\n      }\n    } else if (opts.collation && typeof opts.collation === 'string') {\n      this.collation = Collations.fromName(opts.collation.toUpperCase());\n      if (this.collation === undefined) throw new RangeError(\"Unknown collation '\" + opts.collation + \"'\");\n    } else {\n      this.collation = opts.charsetNumber ? Collations.fromIndex(opts.charsetNumber) : undefined;\n    }\n\n    // connection options\n    this.permitRedirect = opts.permitRedirect === undefined ? true : opts.permitRedirect;\n    this.initSql = opts.initSql;\n    this.connectTimeout = opts.connectTimeout === undefined ? 1000 : opts.connectTimeout;\n    this.connectAttributes = opts.connectAttributes || false;\n    this.compress = opts.compress || false;\n    this.rsaPublicKey = opts.rsaPublicKey;\n    this.cachingRsaPublicKey = opts.cachingRsaPublicKey;\n    this.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval || false;\n    this.forceVersionCheck = opts.forceVersionCheck || false;\n    this.maxAllowedPacket = opts.maxAllowedPacket;\n    this.permitConnectionWhenExpired = opts.permitConnectionWhenExpired || false;\n    this.pipelining = opts.pipelining;\n    this.timezone = opts.timezone || 'local';\n    this.socketPath = opts.socketPath;\n    this.sessionVariables = opts.sessionVariables;\n    this.infileStreamFactory = opts.infileStreamFactory;\n    this.ssl = opts.ssl;\n    if (opts.ssl) {\n      if (typeof opts.ssl !== 'boolean' && typeof opts.ssl !== 'string') {\n        this.ssl.rejectUnauthorized = opts.ssl.rejectUnauthorized !== false;\n      }\n    }\n\n    // socket\n    this.queryTimeout = opts.queryTimeout === undefined ? 0 : opts.queryTimeout;\n    this.socketTimeout = opts.socketTimeout === undefined ? 0 : opts.socketTimeout;\n    this.keepAliveDelay = opts.keepAliveDelay === undefined ? 0 : opts.keepAliveDelay;\n\n    this.trace = opts.trace || false;\n\n    // result-set\n    this.checkDuplicate = opts.checkDuplicate === undefined ? true : opts.checkDuplicate;\n    this.dateStrings = opts.dateStrings || false;\n    this.foundRows = opts.foundRows === undefined || opts.foundRows;\n    this.metaAsArray = opts.metaAsArray || false;\n    this.metaEnumerable = opts.metaEnumerable || false;\n    this.multipleStatements = opts.multipleStatements || false;\n    this.namedPlaceholders = opts.namedPlaceholders || false;\n    this.nestTables = opts.nestTables;\n    this.autoJsonMap = opts.autoJsonMap === undefined ? true : opts.autoJsonMap;\n    this.bitOneIsBoolean = opts.bitOneIsBoolean === undefined ? true : opts.bitOneIsBoolean;\n    this.arrayParenthesis = opts.arrayParenthesis || false;\n    this.permitSetMultiParamEntries = opts.permitSetMultiParamEntries || false;\n    this.rowsAsArray = opts.rowsAsArray || false;\n    this.typeCast = opts.typeCast;\n    if (this.typeCast !== undefined && typeof this.typeCast !== 'function') {\n      this.typeCast = undefined;\n    }\n    this.bulk = opts.bulk === undefined || opts.bulk;\n    this.checkNumberRange = opts.checkNumberRange || false;\n\n    // coherence check\n    if (opts.pipelining === undefined) {\n      this.permitLocalInfile = opts.permitLocalInfile || false;\n      this.pipelining = !this.permitLocalInfile;\n    } else {\n      this.pipelining = opts.pipelining;\n      if (opts.permitLocalInfile === true && this.pipelining) {\n        throw new Error(\n          'enabling options `permitLocalInfile` and `pipelining` is not possible, options are incompatible.'\n        );\n      }\n      this.permitLocalInfile = this.pipelining ? false : opts.permitLocalInfile || false;\n    }\n    this.prepareCacheLength = opts.prepareCacheLength === undefined ? 256 : opts.prepareCacheLength;\n    this.restrictedAuth = opts.restrictedAuth;\n    if (this.restrictedAuth != null) {\n      if (!Array.isArray(this.restrictedAuth)) {\n        this.restrictedAuth = this.restrictedAuth.split(',');\n      }\n    }\n\n    // for compatibility with 2.x version and mysql/mysql2\n    this.bigIntAsNumber = opts.bigIntAsNumber || false;\n    this.insertIdAsNumber = opts.insertIdAsNumber || false;\n    this.decimalAsNumber = opts.decimalAsNumber || false;\n    this.supportBigNumbers = opts.supportBigNumbers || false;\n    this.bigNumberStrings = opts.bigNumberStrings || false;\n\n    if (this.maxAllowedPacket && !Number.isInteger(this.maxAllowedPacket)) {\n      throw new RangeError(\"maxAllowedPacket must be an integer. was '\" + this.maxAllowedPacket + \"'\");\n    }\n  }\n\n  /**\n   * When parsing from String, correcting type.\n   *\n   * @param opts options\n   * @return {opts}\n   */\n  static parseOptionDataType(opts) {\n    if (opts.bulk) opts.bulk = opts.bulk === 'true';\n    if (opts.allowPublicKeyRetrieval) opts.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval === 'true';\n\n    if (opts.insertIdAsNumber) opts.insertIdAsNumber = opts.insertIdAsNumber === 'true';\n    if (opts.decimalAsNumber) opts.decimalAsNumber = opts.decimalAsNumber === 'true';\n    if (opts.bigIntAsNumber) opts.bigIntAsNumber = opts.bigIntAsNumber === 'true';\n    if (opts.charsetNumber && !isNaN(Number.parseInt(opts.charsetNumber))) {\n      opts.charsetNumber = Number.parseInt(opts.charsetNumber);\n    }\n    if (opts.permitRedirect) opts.permitRedirect = opts.permitRedirect === 'true';\n    if (opts.logParam) opts.logParam = opts.logParam === 'true';\n    if (opts.compress) opts.compress = opts.compress === 'true';\n    if (opts.connectAttributes) opts.connectAttributes = JSON.parse(opts.connectAttributes);\n    if (opts.connectTimeout) opts.connectTimeout = parseInt(opts.connectTimeout);\n    if (opts.keepAliveDelay) opts.keepAliveDelay = parseInt(opts.keepAliveDelay);\n    if (opts.socketTimeout) opts.socketTimeout = parseInt(opts.socketTimeout);\n    if (opts.dateStrings) opts.dateStrings = opts.dateStrings === 'true';\n    if (opts.debug) opts.debug = opts.debug === 'true';\n    if (opts.autoJsonMap) opts.autoJsonMap = opts.autoJsonMap === 'true';\n    if (opts.arrayParenthesis) opts.arrayParenthesis = opts.arrayParenthesis === 'true';\n\n    if (opts.checkDuplicate) opts.checkDuplicate = opts.checkDuplicate === 'true';\n    if (opts.debugCompress) opts.debugCompress = opts.debugCompress === 'true';\n    if (opts.debugLen) opts.debugLen = parseInt(opts.debugLen);\n    if (opts.prepareCacheLength) opts.prepareCacheLength = parseInt(opts.prepareCacheLength);\n    if (opts.queryTimeout) opts.queryTimeout = parseInt(opts.queryTimeout);\n    if (opts.foundRows) opts.foundRows = opts.foundRows === 'true';\n    if (opts.maxAllowedPacket && !isNaN(Number.parseInt(opts.maxAllowedPacket)))\n      opts.maxAllowedPacket = parseInt(opts.maxAllowedPacket);\n    if (opts.metaAsArray) opts.metaAsArray = opts.metaAsArray === 'true';\n    if (opts.metaEnumerable) opts.metaEnumerable = opts.metaEnumerable === 'true';\n    if (opts.multipleStatements) opts.multipleStatements = opts.multipleStatements === 'true';\n    if (opts.namedPlaceholders) opts.namedPlaceholders = opts.namedPlaceholders === 'true';\n    if (opts.nestTables) opts.nestTables = opts.nestTables === 'true';\n    if (opts.permitSetMultiParamEntries) opts.permitSetMultiParamEntries = opts.permitSetMultiParamEntries === 'true';\n    if (opts.pipelining) opts.pipelining = opts.pipelining === 'true';\n    if (opts.forceVersionCheck) opts.forceVersionCheck = opts.forceVersionCheck === 'true';\n    if (opts.rowsAsArray) opts.rowsAsArray = opts.rowsAsArray === 'true';\n    if (opts.trace) opts.trace = opts.trace === 'true';\n    if (opts.ssl && (opts.ssl === 'true' || opts.ssl === 'false')) opts.ssl = opts.ssl === 'true';\n    if (opts.bitOneIsBoolean) opts.bitOneIsBoolean = opts.bitOneIsBoolean === 'true';\n    return opts;\n  }\n\n  static parse(opts) {\n    const matchResults = opts.match(urlFormat);\n\n    if (!matchResults) {\n      throw new Error(\n        `error parsing connection string '${opts}'. format must be 'mariadb://[<user>[:<password>]@]<host>[:<port>]/[<db>[?<opt1>=<value1>[&<opt2>=<value2>]]]'`\n      );\n    }\n    const options = {\n      user: matchResults[2] ? decodeURIComponent(matchResults[2]) : undefined,\n      password: matchResults[4] ? decodeURIComponent(matchResults[4]) : undefined,\n      host: matchResults[6] ? decodeURIComponent(matchResults[6]) : matchResults[6],\n      port: matchResults[8] ? parseInt(matchResults[8]) : undefined,\n      database: matchResults[9] ? decodeURIComponent(matchResults[9]) : matchResults[9]\n    };\n\n    const variousOptsString = matchResults[11];\n    if (variousOptsString) {\n      const keyValues = variousOptsString.split('&');\n      keyValues.forEach(function (keyVal) {\n        const equalIdx = keyVal.indexOf('=');\n        if (equalIdx !== 1) {\n          let val = keyVal.substring(equalIdx + 1);\n          val = val ? decodeURIComponent(val) : undefined;\n          options[keyVal.substring(0, equalIdx)] = val;\n        }\n      });\n    }\n\n    return this.parseOptionDataType(options);\n  }\n}\n\nmodule.exports = ConnectionOptions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}