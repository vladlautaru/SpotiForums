{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst Packet = require('./packet');\nconst Iconv = require('iconv-lite');\nclass PacketIconvEncoded extends Packet {\n  constructor(encoding) {\n    super();\n    this.encoding = encoding;\n  }\n  readStringLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    this.pos += len;\n    return Iconv.decode(this.buf.subarray(this.pos - len, this.pos), this.encoding);\n  }\n  readString(buf, beg, len) {\n    return Iconv.decode(buf.subarray(beg, beg + len), this.encoding);\n  }\n  subPacketLengthEncoded(len) {\n    this.skip(len);\n    return new PacketIconvEncoded(this.encoding).update(this.buf, this.pos - len, this.pos);\n  }\n  readStringRemaining() {\n    const str = Iconv.decode(this.buf.subarray(this.pos, this.end), this.encoding);\n    this.pos = this.end;\n    return str;\n  }\n}\nmodule.exports = PacketIconvEncoded;","map":{"version":3,"names":["Packet","require","Iconv","PacketIconvEncoded","constructor","encoding","readStringLengthEncoded","len","readUnsignedLength","pos","decode","buf","subarray","readString","beg","subPacketLengthEncoded","skip","update","readStringRemaining","str","end","module","exports"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/mariadb/lib/io/packet-node-iconv.js"],"sourcesContent":["//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst Packet = require('./packet');\nconst Iconv = require('iconv-lite');\n\nclass PacketIconvEncoded extends Packet {\n  constructor(encoding) {\n    super();\n    this.encoding = encoding;\n  }\n\n  readStringLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n\n    this.pos += len;\n    return Iconv.decode(this.buf.subarray(this.pos - len, this.pos), this.encoding);\n  }\n\n  readString(buf, beg, len) {\n    return Iconv.decode(buf.subarray(beg, beg + len), this.encoding);\n  }\n\n  subPacketLengthEncoded(len) {\n    this.skip(len);\n    return new PacketIconvEncoded(this.encoding).update(this.buf, this.pos - len, this.pos);\n  }\n\n  readStringRemaining() {\n    const str = Iconv.decode(this.buf.subarray(this.pos, this.end), this.encoding);\n    this.pos = this.end;\n    return str;\n  }\n}\n\nmodule.exports = PacketIconvEncoded;\n"],"mappings":"AAAA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAME,kBAAkB,SAASH,MAAM,CAAC;EACtCI,WAAWA,CAACC,QAAQ,EAAE;IACpB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEAC,uBAAuBA,CAAA,EAAG;IACxB,MAAMC,GAAG,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACrC,IAAID,GAAG,KAAK,IAAI,EAAE,OAAO,IAAI;IAE7B,IAAI,CAACE,GAAG,IAAIF,GAAG;IACf,OAAOL,KAAK,CAACQ,MAAM,CAAC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACH,GAAG,GAAGF,GAAG,EAAE,IAAI,CAACE,GAAG,CAAC,EAAE,IAAI,CAACJ,QAAQ,CAAC;EACjF;EAEAQ,UAAUA,CAACF,GAAG,EAAEG,GAAG,EAAEP,GAAG,EAAE;IACxB,OAAOL,KAAK,CAACQ,MAAM,CAACC,GAAG,CAACC,QAAQ,CAACE,GAAG,EAAEA,GAAG,GAAGP,GAAG,CAAC,EAAE,IAAI,CAACF,QAAQ,CAAC;EAClE;EAEAU,sBAAsBA,CAACR,GAAG,EAAE;IAC1B,IAAI,CAACS,IAAI,CAACT,GAAG,CAAC;IACd,OAAO,IAAIJ,kBAAkB,CAAC,IAAI,CAACE,QAAQ,CAAC,CAACY,MAAM,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACF,GAAG,GAAGF,GAAG,EAAE,IAAI,CAACE,GAAG,CAAC;EACzF;EAEAS,mBAAmBA,CAAA,EAAG;IACpB,MAAMC,GAAG,GAAGjB,KAAK,CAACQ,MAAM,CAAC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACH,GAAG,EAAE,IAAI,CAACW,GAAG,CAAC,EAAE,IAAI,CAACf,QAAQ,CAAC;IAC9E,IAAI,CAACI,GAAG,GAAG,IAAI,CAACW,GAAG;IACnB,OAAOD,GAAG;EACZ;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGnB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}