{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ale lui Vlad\\\\Projects\\\\SpotiForums\\\\spotiforums\\\\src\\\\pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from '../AuthContext';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  var _post$post_title, _post$post_desc;\n  const [post, setPost] = useState({});\n  const {\n    postId\n  } = useParams();\n  const {\n    auth,\n    logOut\n  } = useContext(AuthContext);\n  const handleLogOut = () => {\n    logOut();\n    navigate('/');\n  };\n  const handleLoginButton = () => {\n    navigate('/login');\n  };\n  const handleRegisterButton = () => {\n    navigate('/register');\n  };\n  const getPost = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/getposts');\n      return response.data.find(item => item.post_id === parseInt(postId)) || {};\n    } catch (error) {\n      alert('Error:' + error);\n      return {};\n    }\n  };\n  useEffect(() => {\n    const fetchPost = async () => {\n      const postData = await getPost();\n      setPost(postData);\n    };\n    fetchPost();\n  }, [postId]); // Empty dependency array to only run once on component mount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_post$post_title = post.post_title) !== null && _post$post_title !== void 0 ? _post$post_title : 'Untitled'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_post$post_desc = post.post_desc) !== null && _post$post_desc !== void 0 ? _post$post_desc : 'Empty'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Post, \"wbWBfXmYGyDfhcD+Ort05MCCEv8=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","AuthContext","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_s","_post$post_title","_post$post_desc","post","setPost","postId","auth","logOut","handleLogOut","navigate","handleLoginButton","handleRegisterButton","getPost","response","get","data","find","item","post_id","parseInt","error","alert","fetchPost","postData","children","post_title","fileName","_jsxFileName","lineNumber","columnNumber","post_desc","_c","$RefreshReg$"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/src/pages/Post.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AuthContext } from '../AuthContext';\r\nimport axios from \"axios\";\r\n\r\nconst Post = () => {\r\n    const [post, setPost] = useState({});\r\n    const {postId} = useParams();\r\n\r\n    const {auth, logOut} = useContext(AuthContext);\r\n\r\n    const handleLogOut = () => {\r\n        logOut();\r\n        navigate('/');\r\n    };\r\n\r\n    const handleLoginButton = () => {\r\n        navigate('/login');\r\n    }\r\n\r\n    const handleRegisterButton = () => {\r\n        navigate('/register');\r\n    }\r\n\r\n    const getPost = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/getposts');\r\n            return response.data.find(item => item.post_id === parseInt(postId)) || {};\r\n        } catch (error) {\r\n            alert('Error:' + error);\r\n            return {};\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            const postData = await getPost();\r\n            setPost(postData);\r\n        };\r\n\r\n        fetchPost();\r\n    }, [postId]); // Empty dependency array to only run once on component mount\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <span>{post.post_title ?? 'Untitled'}</span>\r\n                <br/>\r\n                <span>{post.post_desc ?? 'Empty'}</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA,EAAAC,eAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM;IAACc;EAAM,CAAC,GAAGb,SAAS,CAAC,CAAC;EAE5B,MAAM;IAACc,IAAI;IAAEC;EAAM,CAAC,GAAGlB,UAAU,CAACI,WAAW,CAAC;EAE9C,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACvBD,MAAM,CAAC,CAAC;IACRE,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BD,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IAC/BF,QAAQ,CAAC,WAAW,CAAC;EACzB,CAAC;EAED,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,gCAAgC,CAAC;MAClE,OAAOD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKC,QAAQ,CAACd,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;IAC9E,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,KAAK,CAAC,QAAQ,GAAGD,KAAK,CAAC;MACvB,OAAO,CAAC,CAAC;IACb;EACJ,CAAC;EAED9B,SAAS,CAAC,MAAM;IACZ,MAAMgC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMX,OAAO,CAAC,CAAC;MAChCR,OAAO,CAACmB,QAAQ,CAAC;IACrB,CAAC;IAEDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBACIT,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACI5B,OAAA;MAAA4B,QAAA,gBACI5B,OAAA;QAAA4B,QAAA,GAAAvB,gBAAA,GAAOE,IAAI,CAACsB,UAAU,cAAAxB,gBAAA,cAAAA,gBAAA,GAAI;MAAU;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CjC,OAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLjC,OAAA;QAAA4B,QAAA,GAAAtB,eAAA,GAAOC,IAAI,CAAC2B,SAAS,cAAA5B,eAAA,cAAAA,eAAA,GAAI;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC,gBACR,CAAC;AAEX,CAAC;AAAA7B,EAAA,CA/CKD,IAAI;EAAA,QAEWP,SAAS;AAAA;AAAAuC,EAAA,GAFxBhC,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}