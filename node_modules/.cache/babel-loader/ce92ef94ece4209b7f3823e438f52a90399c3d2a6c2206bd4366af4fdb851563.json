{"ast":null,"code":"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nvar base64 = require('base64-js');\nvar ieee754 = require('ieee754');\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nvar K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function () {\n        return 42;\n      }\n    };\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length);\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n    return allocUnsafe(arg);\n  }\n  return from(arg, encodingOrOffset, length);\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  });\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value);\n  }\n  if (value == null) {\n    throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n  var valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n  var b = fromObject(value);\n  if (b) return b;\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype;\nBuffer.__proto__ = Uint8Array;\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n  return createBuffer(size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n  var length = byteLength(string, encoding) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n  return buf;\n}\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf;\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n  var buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n    if (buf.length === 0) {\n      return buf;\n    }\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n    return fromArrayLike(obj);\n  }\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length);\n}\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf);\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n  var len = string.length;\n  var mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  var length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n  var strLen = string.length;\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype;\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  var len = end - start;\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    var len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n}","map":{"version":3,"names":["base64","require","ieee754","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","arr","Uint8Array","__proto__","prototype","foo","e","Object","defineProperty","enumerable","get","isBuffer","undefined","buffer","byteOffset","createBuffer","length","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","Symbol","species","value","configurable","writable","poolSize","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","fromArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","byteLength","actual","write","slice","array","i","obj","len","copy","numberIsNaN","type","Array","isArray","data","toString","_isBuffer","compare","a","offset","x","y","Math","min","String","toLowerCase","concat","list","pos","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","Error","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","subarray","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","code","charCodeAt","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","hi","lo","toByteArray","src","dst","constructor","name"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/buffer/index.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}