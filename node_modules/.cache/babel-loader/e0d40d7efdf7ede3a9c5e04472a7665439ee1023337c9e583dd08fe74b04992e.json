{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst LRU = require('lru-cache');\n\n/**\n * LRU prepare cache\n *\n */\nclass LruPrepareCache {\n  #lruCache;\n  #info;\n  constructor(info, prepareCacheLength) {\n    this.#info = info;\n    this.#lruCache = new LRU.LRUCache({\n      max: prepareCacheLength,\n      dispose: (value, key) => value.unCache()\n    });\n  }\n  get(sql) {\n    const key = this.#info.database + '|' + sql;\n    const cachedItem = this.#lruCache.get(key);\n    if (cachedItem) {\n      return cachedItem.incrementUse();\n    }\n    return null;\n  }\n  set(sql, cache) {\n    const key = this.#info.database + '|' + sql;\n    this.#lruCache.set(key, cache);\n  }\n  toString() {\n    let keyStr = '';\n    for (const value of this.#lruCache.keys()) {\n      keyStr += '[' + value + '],';\n    }\n    if (keyStr.length > 1) keyStr = keyStr.substring(0, keyStr.length - 1);\n    return 'info{cache:' + keyStr + '}';\n  }\n  reset() {\n    this.#lruCache.clear();\n  }\n}\nmodule.exports = LruPrepareCache;","map":{"version":3,"names":["LRU","require","LruPrepareCache","lruCache","info","constructor","prepareCacheLength","LRUCache","max","dispose","value","key","unCache","get","sql","database","cachedItem","incrementUse","set","cache","toString","keyStr","keys","length","substring","reset","clear","module","exports"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/mariadb/lib/lru-prepare-cache.js"],"sourcesContent":["//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\nconst LRU = require('lru-cache');\n\n/**\n * LRU prepare cache\n *\n */\nclass LruPrepareCache {\n  #lruCache;\n  #info;\n  constructor(info, prepareCacheLength) {\n    this.#info = info;\n    this.#lruCache = new LRU.LRUCache({\n      max: prepareCacheLength,\n      dispose: (value, key) => value.unCache()\n    });\n  }\n\n  get(sql) {\n    const key = this.#info.database + '|' + sql;\n    const cachedItem = this.#lruCache.get(key);\n    if (cachedItem) {\n      return cachedItem.incrementUse();\n    }\n    return null;\n  }\n\n  set(sql, cache) {\n    const key = this.#info.database + '|' + sql;\n    this.#lruCache.set(key, cache);\n  }\n\n  toString() {\n    let keyStr = '';\n    for (const value of this.#lruCache.keys()) {\n      keyStr += '[' + value + '],';\n    }\n    if (keyStr.length > 1) keyStr = keyStr.substring(0, keyStr.length - 1);\n    return 'info{cache:' + keyStr + '}';\n  }\n\n  reset() {\n    this.#lruCache.clear();\n  }\n}\n\nmodule.exports = LruPrepareCache;\n"],"mappings":"AAAA;AACA;;AAEA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEhC;AACA;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EACpB,CAACC,QAAQ;EACT,CAACC,IAAI;EACLC,WAAWA,CAACD,IAAI,EAAEE,kBAAkB,EAAE;IACpC,IAAI,CAAC,CAACF,IAAI,GAAGA,IAAI;IACjB,IAAI,CAAC,CAACD,QAAQ,GAAG,IAAIH,GAAG,CAACO,QAAQ,CAAC;MAChCC,GAAG,EAAEF,kBAAkB;MACvBG,OAAO,EAAEA,CAACC,KAAK,EAAEC,GAAG,KAAKD,KAAK,CAACE,OAAO,CAAC;IACzC,CAAC,CAAC;EACJ;EAEAC,GAAGA,CAACC,GAAG,EAAE;IACP,MAAMH,GAAG,GAAG,IAAI,CAAC,CAACP,IAAI,CAACW,QAAQ,GAAG,GAAG,GAAGD,GAAG;IAC3C,MAAME,UAAU,GAAG,IAAI,CAAC,CAACb,QAAQ,CAACU,GAAG,CAACF,GAAG,CAAC;IAC1C,IAAIK,UAAU,EAAE;MACd,OAAOA,UAAU,CAACC,YAAY,CAAC,CAAC;IAClC;IACA,OAAO,IAAI;EACb;EAEAC,GAAGA,CAACJ,GAAG,EAAEK,KAAK,EAAE;IACd,MAAMR,GAAG,GAAG,IAAI,CAAC,CAACP,IAAI,CAACW,QAAQ,GAAG,GAAG,GAAGD,GAAG;IAC3C,IAAI,CAAC,CAACX,QAAQ,CAACe,GAAG,CAACP,GAAG,EAAEQ,KAAK,CAAC;EAChC;EAEAC,QAAQA,CAAA,EAAG;IACT,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,MAAMX,KAAK,IAAI,IAAI,CAAC,CAACP,QAAQ,CAACmB,IAAI,CAAC,CAAC,EAAE;MACzCD,MAAM,IAAI,GAAG,GAAGX,KAAK,GAAG,IAAI;IAC9B;IACA,IAAIW,MAAM,CAACE,MAAM,GAAG,CAAC,EAAEF,MAAM,GAAGA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAEH,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;IACtE,OAAO,aAAa,GAAGF,MAAM,GAAG,GAAG;EACrC;EAEAI,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC,CAACtB,QAAQ,CAACuB,KAAK,CAAC,CAAC;EACxB;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG1B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}