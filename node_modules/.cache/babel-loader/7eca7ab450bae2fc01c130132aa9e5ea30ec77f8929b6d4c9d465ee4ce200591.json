{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst Packet = require('./packet');\nclass PacketNodeEncoded extends Packet {\n  constructor(encoding) {\n    super();\n    // using undefined for utf8 permit to avoid node.js searching\n    // for charset, using directly utf8 default one.\n    this.encoding = encoding === 'utf8' ? undefined : encoding;\n  }\n  readStringLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    this.pos += len;\n    return this.buf.toString(this.encoding, this.pos - len, this.pos);\n  }\n  readString(buf, beg, len) {\n    return buf.toString(this.encoding, beg, beg + len);\n  }\n  subPacketLengthEncoded(len) {\n    this.skip(len);\n    return new PacketNodeEncoded(this.encoding).update(this.buf, this.pos - len, this.pos);\n  }\n  readStringRemaining() {\n    const str = this.buf.toString(this.encoding, this.pos, this.end);\n    this.pos = this.end;\n    return str;\n  }\n}\nmodule.exports = PacketNodeEncoded;","map":{"version":3,"names":["Packet","require","PacketNodeEncoded","constructor","encoding","undefined","readStringLengthEncoded","len","readUnsignedLength","pos","buf","toString","readString","beg","subPacketLengthEncoded","skip","update","readStringRemaining","str","end","module","exports"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/mariadb/lib/io/packet-node-encoded.js"],"sourcesContent":["//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst Packet = require('./packet');\n\nclass PacketNodeEncoded extends Packet {\n  constructor(encoding) {\n    super();\n    // using undefined for utf8 permit to avoid node.js searching\n    // for charset, using directly utf8 default one.\n    this.encoding = encoding === 'utf8' ? undefined : encoding;\n  }\n\n  readStringLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n\n    this.pos += len;\n    return this.buf.toString(this.encoding, this.pos - len, this.pos);\n  }\n\n  readString(buf, beg, len) {\n    return buf.toString(this.encoding, beg, beg + len);\n  }\n\n  subPacketLengthEncoded(len) {\n    this.skip(len);\n    return new PacketNodeEncoded(this.encoding).update(this.buf, this.pos - len, this.pos);\n  }\n\n  readStringRemaining() {\n    const str = this.buf.toString(this.encoding, this.pos, this.end);\n    this.pos = this.end;\n    return str;\n  }\n}\n\nmodule.exports = PacketNodeEncoded;\n"],"mappings":"AAAA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAElC,MAAMC,iBAAiB,SAASF,MAAM,CAAC;EACrCG,WAAWA,CAACC,QAAQ,EAAE;IACpB,KAAK,CAAC,CAAC;IACP;IACA;IACA,IAAI,CAACA,QAAQ,GAAGA,QAAQ,KAAK,MAAM,GAAGC,SAAS,GAAGD,QAAQ;EAC5D;EAEAE,uBAAuBA,CAAA,EAAG;IACxB,MAAMC,GAAG,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACrC,IAAID,GAAG,KAAK,IAAI,EAAE,OAAO,IAAI;IAE7B,IAAI,CAACE,GAAG,IAAIF,GAAG;IACf,OAAO,IAAI,CAACG,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACP,QAAQ,EAAE,IAAI,CAACK,GAAG,GAAGF,GAAG,EAAE,IAAI,CAACE,GAAG,CAAC;EACnE;EAEAG,UAAUA,CAACF,GAAG,EAAEG,GAAG,EAAEN,GAAG,EAAE;IACxB,OAAOG,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACP,QAAQ,EAAES,GAAG,EAAEA,GAAG,GAAGN,GAAG,CAAC;EACpD;EAEAO,sBAAsBA,CAACP,GAAG,EAAE;IAC1B,IAAI,CAACQ,IAAI,CAACR,GAAG,CAAC;IACd,OAAO,IAAIL,iBAAiB,CAAC,IAAI,CAACE,QAAQ,CAAC,CAACY,MAAM,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACD,GAAG,GAAGF,GAAG,EAAE,IAAI,CAACE,GAAG,CAAC;EACxF;EAEAQ,mBAAmBA,CAAA,EAAG;IACpB,MAAMC,GAAG,GAAG,IAAI,CAACR,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACP,QAAQ,EAAE,IAAI,CAACK,GAAG,EAAE,IAAI,CAACU,GAAG,CAAC;IAChE,IAAI,CAACV,GAAG,GAAG,IAAI,CAACU,GAAG;IACnB,OAAOD,GAAG;EACZ;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGnB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}