{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst hasMinVersion = function (nodeVersionStr, connectorRequirement) {\n  const versNode = nodeVersionStr.split('.');\n  const versReq = connectorRequirement.split('.');\n  const majorNode = Number(versNode[0]);\n  const majorReq = Number(versReq[0]);\n  if (majorNode > majorReq) return true;\n  if (majorNode < majorReq) return false;\n  if (versReq.length === 1) return true;\n  const minorNode = Number(versNode[1]);\n  const minorReq = Number(versReq[1]);\n  return minorNode >= minorReq;\n};\nmodule.exports.hasMinVersion = hasMinVersion;\nconst requirement = require('./package.json').engines.node;\nconst connectorRequirement = requirement.replace('>=', '').trim();\nconst currentNodeVersion = process.version.replace('v', '');\nif (!hasMinVersion(currentNodeVersion, connectorRequirement)) {\n  console.error(`please upgrade node: mariadb requires at least version ${connectorRequirement}`);\n  process.exit(1);\n}","map":{"version":3,"names":["hasMinVersion","nodeVersionStr","connectorRequirement","versNode","split","versReq","majorNode","Number","majorReq","length","minorNode","minorReq","module","exports","requirement","require","engines","node","replace","trim","currentNodeVersion","process","version","console","error","exit"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/mariadb/check-node.js"],"sourcesContent":["//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst hasMinVersion = function (nodeVersionStr, connectorRequirement) {\n  const versNode = nodeVersionStr.split('.');\n  const versReq = connectorRequirement.split('.');\n\n  const majorNode = Number(versNode[0]);\n  const majorReq = Number(versReq[0]);\n  if (majorNode > majorReq) return true;\n  if (majorNode < majorReq) return false;\n\n  if (versReq.length === 1) return true;\n\n  const minorNode = Number(versNode[1]);\n  const minorReq = Number(versReq[1]);\n  return minorNode >= minorReq;\n};\n\nmodule.exports.hasMinVersion = hasMinVersion;\n\nconst requirement = require('./package.json').engines.node;\nconst connectorRequirement = requirement.replace('>=', '').trim();\nconst currentNodeVersion = process.version.replace('v', '');\nif (!hasMinVersion(currentNodeVersion, connectorRequirement)) {\n  console.error(`please upgrade node: mariadb requires at least version ${connectorRequirement}`);\n  process.exit(1);\n}\n"],"mappings":"AAAA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,aAAa,GAAG,SAAAA,CAAUC,cAAc,EAAEC,oBAAoB,EAAE;EACpE,MAAMC,QAAQ,GAAGF,cAAc,CAACG,KAAK,CAAC,GAAG,CAAC;EAC1C,MAAMC,OAAO,GAAGH,oBAAoB,CAACE,KAAK,CAAC,GAAG,CAAC;EAE/C,MAAME,SAAS,GAAGC,MAAM,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMK,QAAQ,GAAGD,MAAM,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;EACnC,IAAIC,SAAS,GAAGE,QAAQ,EAAE,OAAO,IAAI;EACrC,IAAIF,SAAS,GAAGE,QAAQ,EAAE,OAAO,KAAK;EAEtC,IAAIH,OAAO,CAACI,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAErC,MAAMC,SAAS,GAAGH,MAAM,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMQ,QAAQ,GAAGJ,MAAM,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;EACnC,OAAOK,SAAS,IAAIC,QAAQ;AAC9B,CAAC;AAEDC,MAAM,CAACC,OAAO,CAACb,aAAa,GAAGA,aAAa;AAE5C,MAAMc,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC,CAACC,OAAO,CAACC,IAAI;AAC1D,MAAMf,oBAAoB,GAAGY,WAAW,CAACI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;AACjE,MAAMC,kBAAkB,GAAGC,OAAO,CAACC,OAAO,CAACJ,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;AAC3D,IAAI,CAAClB,aAAa,CAACoB,kBAAkB,EAAElB,oBAAoB,CAAC,EAAE;EAC5DqB,OAAO,CAACC,KAAK,CAAE,0DAAyDtB,oBAAqB,EAAC,CAAC;EAC/FmB,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}