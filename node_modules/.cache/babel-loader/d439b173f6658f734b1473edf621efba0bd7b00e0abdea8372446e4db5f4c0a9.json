{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst ZLib = require('zlib');\nconst Utils = require('../misc/utils');\n\n/**\n * MySQL packet parser\n * see : https://mariadb.com/kb/en/library/0-packet/\n */\nclass CompressionInputStream {\n  constructor(reader, receiveQueue, opts, info) {\n    this.reader = reader;\n    this.receiveQueue = receiveQueue;\n    this.info = info;\n    this.opts = opts;\n    this.header = Buffer.allocUnsafe(7);\n    this.headerLen = 0;\n    this.compressPacketLen = null;\n    this.packetLen = null;\n    this.remainingLen = null;\n    this.parts = null;\n    this.partsTotalLen = 0;\n  }\n  receivePacket(chunk) {\n    let cmd = this.currentCmd();\n    if (this.opts.debugCompress) {\n      this.opts.logger.network(`<== conn:${this.info.threadId ? this.info.threadId : -1} ${cmd ? cmd.onPacketReceive ? cmd.constructor.name + '.' + cmd.onPacketReceive.name : cmd.constructor.name : 'no command'} (compress)\\n${Utils.log(this.opts, chunk, 0, chunk.length, this.header)}`);\n    }\n    if (cmd) cmd.compressSequenceNo = this.header[3];\n    const unCompressLen = this.header[4] | this.header[5] << 8 | this.header[6] << 16;\n    if (unCompressLen === 0) {\n      this.reader.onData(chunk);\n    } else {\n      //use synchronous inflating, to ensure FIFO packet order\n      const unCompressChunk = ZLib.inflateSync(chunk);\n      this.reader.onData(unCompressChunk);\n    }\n  }\n  currentCmd() {\n    let cmd;\n    while (cmd = this.receiveQueue.peek()) {\n      if (cmd.onPacketReceive) return cmd;\n      this.receiveQueue.shift();\n    }\n    return null;\n  }\n  resetHeader() {\n    this.remainingLen = null;\n    this.headerLen = 0;\n  }\n  onData(chunk) {\n    let pos = 0;\n    let length;\n    const chunkLen = chunk.length;\n    do {\n      if (this.remainingLen) {\n        length = this.remainingLen;\n      } else if (this.headerLen === 0 && chunkLen - pos >= 7) {\n        this.header[0] = chunk[pos];\n        this.header[1] = chunk[pos + 1];\n        this.header[2] = chunk[pos + 2];\n        this.header[3] = chunk[pos + 3];\n        this.header[4] = chunk[pos + 4];\n        this.header[5] = chunk[pos + 5];\n        this.header[6] = chunk[pos + 6];\n        this.headerLen = 7;\n        pos += 7;\n        this.compressPacketLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n        this.packetLen = this.header[4] | this.header[5] << 8 | this.header[6] << 16;\n        if (this.packetLen === 0) this.packetLen = this.compressPacketLen;\n        length = this.compressPacketLen;\n      } else {\n        length = null;\n        while (chunkLen - pos > 0) {\n          this.header[this.headerLen++] = chunk[pos++];\n          if (this.headerLen === 7) {\n            this.compressPacketLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n            this.packetLen = this.header[4] | this.header[5] << 8 | this.header[6] << 16;\n            if (this.packetLen === 0) this.packetLen = this.compressPacketLen;\n            length = this.compressPacketLen;\n            break;\n          }\n        }\n      }\n      if (length) {\n        if (chunkLen - pos >= length) {\n          const buf = chunk.subarray(pos, pos + length);\n          pos += length;\n          if (this.parts) {\n            this.parts.push(buf);\n            this.partsTotalLen += length;\n            if (this.compressPacketLen < 0xffffff) {\n              let buf = Buffer.concat(this.parts, this.partsTotalLen);\n              this.parts = null;\n              this.receivePacket(buf);\n            }\n          } else {\n            if (this.compressPacketLen < 0xffffff) {\n              this.receivePacket(buf);\n            } else {\n              this.parts = [buf];\n              this.partsTotalLen = length;\n            }\n          }\n          this.resetHeader();\n        } else {\n          const buf = chunk.subarray(pos, chunkLen);\n          if (!this.parts) {\n            this.parts = [buf];\n            this.partsTotalLen = chunkLen - pos;\n          } else {\n            this.parts.push(buf);\n            this.partsTotalLen += chunkLen - pos;\n          }\n          this.remainingLen = length - (chunkLen - pos);\n          return;\n        }\n      }\n    } while (pos < chunkLen);\n  }\n}\nmodule.exports = CompressionInputStream;","map":{"version":3,"names":["ZLib","require","Utils","CompressionInputStream","constructor","reader","receiveQueue","opts","info","header","Buffer","allocUnsafe","headerLen","compressPacketLen","packetLen","remainingLen","parts","partsTotalLen","receivePacket","chunk","cmd","currentCmd","debugCompress","logger","network","threadId","onPacketReceive","name","log","length","compressSequenceNo","unCompressLen","onData","unCompressChunk","inflateSync","peek","shift","resetHeader","pos","chunkLen","buf","subarray","push","concat","module","exports"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/node_modules/mariadb/lib/io/compression-input-stream.js"],"sourcesContent":["//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nconst ZLib = require('zlib');\nconst Utils = require('../misc/utils');\n\n/**\n * MySQL packet parser\n * see : https://mariadb.com/kb/en/library/0-packet/\n */\nclass CompressionInputStream {\n  constructor(reader, receiveQueue, opts, info) {\n    this.reader = reader;\n    this.receiveQueue = receiveQueue;\n    this.info = info;\n    this.opts = opts;\n    this.header = Buffer.allocUnsafe(7);\n    this.headerLen = 0;\n    this.compressPacketLen = null;\n    this.packetLen = null;\n    this.remainingLen = null;\n\n    this.parts = null;\n    this.partsTotalLen = 0;\n  }\n\n  receivePacket(chunk) {\n    let cmd = this.currentCmd();\n    if (this.opts.debugCompress) {\n      this.opts.logger.network(\n        `<== conn:${this.info.threadId ? this.info.threadId : -1} ${\n          cmd\n            ? cmd.onPacketReceive\n              ? cmd.constructor.name + '.' + cmd.onPacketReceive.name\n              : cmd.constructor.name\n            : 'no command'\n        } (compress)\\n${Utils.log(this.opts, chunk, 0, chunk.length, this.header)}`\n      );\n    }\n    if (cmd) cmd.compressSequenceNo = this.header[3];\n    const unCompressLen = this.header[4] | (this.header[5] << 8) | (this.header[6] << 16);\n    if (unCompressLen === 0) {\n      this.reader.onData(chunk);\n    } else {\n      //use synchronous inflating, to ensure FIFO packet order\n      const unCompressChunk = ZLib.inflateSync(chunk);\n      this.reader.onData(unCompressChunk);\n    }\n  }\n\n  currentCmd() {\n    let cmd;\n    while ((cmd = this.receiveQueue.peek())) {\n      if (cmd.onPacketReceive) return cmd;\n      this.receiveQueue.shift();\n    }\n    return null;\n  }\n\n  resetHeader() {\n    this.remainingLen = null;\n    this.headerLen = 0;\n  }\n\n  onData(chunk) {\n    let pos = 0;\n    let length;\n    const chunkLen = chunk.length;\n\n    do {\n      if (this.remainingLen) {\n        length = this.remainingLen;\n      } else if (this.headerLen === 0 && chunkLen - pos >= 7) {\n        this.header[0] = chunk[pos];\n        this.header[1] = chunk[pos + 1];\n        this.header[2] = chunk[pos + 2];\n        this.header[3] = chunk[pos + 3];\n        this.header[4] = chunk[pos + 4];\n        this.header[5] = chunk[pos + 5];\n        this.header[6] = chunk[pos + 6];\n        this.headerLen = 7;\n        pos += 7;\n        this.compressPacketLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n        this.packetLen = this.header[4] | (this.header[5] << 8) | (this.header[6] << 16);\n        if (this.packetLen === 0) this.packetLen = this.compressPacketLen;\n        length = this.compressPacketLen;\n      } else {\n        length = null;\n        while (chunkLen - pos > 0) {\n          this.header[this.headerLen++] = chunk[pos++];\n          if (this.headerLen === 7) {\n            this.compressPacketLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n            this.packetLen = this.header[4] | (this.header[5] << 8) | (this.header[6] << 16);\n            if (this.packetLen === 0) this.packetLen = this.compressPacketLen;\n            length = this.compressPacketLen;\n            break;\n          }\n        }\n      }\n\n      if (length) {\n        if (chunkLen - pos >= length) {\n          const buf = chunk.subarray(pos, pos + length);\n          pos += length;\n          if (this.parts) {\n            this.parts.push(buf);\n            this.partsTotalLen += length;\n\n            if (this.compressPacketLen < 0xffffff) {\n              let buf = Buffer.concat(this.parts, this.partsTotalLen);\n              this.parts = null;\n              this.receivePacket(buf);\n            }\n          } else {\n            if (this.compressPacketLen < 0xffffff) {\n              this.receivePacket(buf);\n            } else {\n              this.parts = [buf];\n              this.partsTotalLen = length;\n            }\n          }\n          this.resetHeader();\n        } else {\n          const buf = chunk.subarray(pos, chunkLen);\n          if (!this.parts) {\n            this.parts = [buf];\n            this.partsTotalLen = chunkLen - pos;\n          } else {\n            this.parts.push(buf);\n            this.partsTotalLen += chunkLen - pos;\n          }\n          this.remainingLen = length - (chunkLen - pos);\n          return;\n        }\n      }\n    } while (pos < chunkLen);\n  }\n}\n\nmodule.exports = CompressionInputStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}