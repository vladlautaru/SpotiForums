{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../AuthContext'; // Adjust the path as needed\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nconst Post = () => {\n  _s();\n  const [post, setPost] = useState([]);\n  const {\n    postId\n  } = useParams();\n  const getPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/getposts');\n      let post = response.filter(item => item.post);\n      return response.data;\n    } catch (error) {\n      alert('Error:' + error);\n      return '';\n    }\n  };\n  useEffect(() => {\n    const fetchPost = async () => {\n      const postsData = await getPosts();\n      setPost(postsData);\n    };\n    fetchPost();\n  }, []); // Empty dependency array to only run once on component mount\n};\n_s(Post, \"O7876FY+p35j2S5Yy1jcSyu56Cw=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","useParams","axios","Post","_s","post","setPost","postId","getPosts","response","get","filter","item","data","error","alert","fetchPost","postsData","_c","$RefreshReg$"],"sources":["D:/Ale lui Vlad/Projects/SpotiForums/spotiforums/src/pages/Post.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport { AuthContext } from '../AuthContext'; // Adjust the path as needed\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Post = () => {\r\n    const [post, setPost] = useState([]);\r\n    const {postId} = useParams();\r\n\r\n    const getPosts = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/getposts');\r\n\r\n            let post = response.filter(item => item.post)\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            alert('Error:' + error);\r\n            return '';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            const postsData = await getPosts();\r\n            setPost(postsData);\r\n        };\r\n\r\n        fetchPost();\r\n    }, []); // Empty dependency array to only run once on component mount\r\n}\r\n\r\nexport default Post;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,SAASC,WAAW,QAAQ,gBAAgB,CAAC,CAAC;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAACQ;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAE5B,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,gCAAgC,CAAC;MAElE,IAAIL,IAAI,GAAGI,QAAQ,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,IAAI,CAAC;MAE7C,OAAOI,QAAQ,CAACI,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,KAAK,CAAC,QAAQ,GAAGD,KAAK,CAAC;MACvB,OAAO,EAAE;IACb;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZ,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAAC,CAAC;MAClCF,OAAO,CAACW,SAAS,CAAC;IACtB,CAAC;IAEDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACZ,CAAC;AAAAZ,EAAA,CAzBKD,IAAI;EAAA,QAEWF,SAAS;AAAA;AAAAiB,EAAA,GAFxBf,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}