{"ast":null,"code":"//  SPDX-License-Identifier: LGPL-2.1-or-later\n//  Copyright (c) 2015-2024 MariaDB Corporation Ab\n\n'use strict';\n\nlet ConnOptions = require('./connection-options');\nclass PoolOptions {\n  constructor(opts) {\n    if (typeof opts === 'string') {\n      opts = ConnOptions.parse(opts);\n\n      //set data type\n      if (opts.acquireTimeout) opts.acquireTimeout = parseInt(opts.acquireTimeout);\n      if (opts.connectionLimit) opts.connectionLimit = parseInt(opts.connectionLimit);\n      if (opts.idleTimeout) opts.idleTimeout = parseInt(opts.idleTimeout);\n      if (opts.leakDetectionTimeout) opts.leakDetectionTimeout = parseInt(opts.leakDetectionTimeout);\n      if (opts.initializationTimeout) opts.initializationTimeout = parseInt(opts.initializationTimeout);\n      if (opts.minDelayValidation) opts.minDelayValidation = parseInt(opts.minDelayValidation);\n      if (opts.minimumIdle) opts.minimumIdle = parseInt(opts.minimumIdle);\n      if (opts.noControlAfterUse) opts.noControlAfterUse = opts.noControlAfterUse === 'true';\n      if (opts.resetAfterUse) opts.resetAfterUse = opts.resetAfterUse === 'true';\n      if (opts.pingTimeout) opts.pingTimeout = parseInt(opts.pingTimeout);\n    }\n    this.acquireTimeout = opts.acquireTimeout === undefined ? 10000 : opts.acquireTimeout;\n    this.connectionLimit = opts.connectionLimit === undefined ? 10 : opts.connectionLimit;\n    this.idleTimeout = opts.idleTimeout === undefined ? 1800 : opts.idleTimeout;\n    this.leakDetectionTimeout = opts.leakDetectionTimeout || 0;\n    this.initializationTimeout = opts.initializationTimeout === undefined ? Math.max(100, this.acquireTimeout - 100) : opts.initializationTimeout;\n    this.minDelayValidation = opts.minDelayValidation === undefined ? 500 : opts.minDelayValidation;\n    this.minimumIdle = opts.minimumIdle === undefined ? this.connectionLimit : Math.min(opts.minimumIdle, this.connectionLimit);\n    this.noControlAfterUse = opts.noControlAfterUse || false;\n    this.resetAfterUse = opts.resetAfterUse || false;\n    this.pingTimeout = opts.pingTimeout || 250;\n    this.connOptions = new ConnOptions(opts);\n    if (this.acquireTimeout > 0 && this.connOptions.connectTimeout > this.acquireTimeout) {\n      this.connOptions.connectTimeout = this.acquireTimeout;\n    }\n  }\n}\nmodule.exports = PoolOptions;","map":null,"metadata":{},"sourceType":"script"}